import{_ as a,o as n,c as s,a as e}from"./app-eb8d0uPG.js";const t={},o=e(`<h1 id="oauth" tabindex="-1"><a class="header-anchor" href="#oauth" aria-hidden="true">#</a> OAUTH</h1><p>配置环境变量或在 config.yaml 中配置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">OAUTH_URL</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//xxxxx.xxx.com/oauth
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当该值被配置后，用户登陆时将向该地址 POST 以下数据</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>usertoken: 用户Token
carid: 车牌号
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其实更准确地是，用户登陆界面post或get接收到的所有数据都将被POST转发到该地址</p><p>允许用户登陆接口应返回 json 数据</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">&quot;msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;登陆失败时的提示信息&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 code 为 1 时表示允许登陆，其他值表示不允许登陆</p><p>msg 为登陆失败时的提示信息</p>`,10),i=[o];function c(l,d){return n(),s("div",null,i)}const r=a(t,[["render",c],["__file","oauth.html.vue"]]);export{r as default};
